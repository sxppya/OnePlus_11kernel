# 工作流程名称
name: Build OnePlus 11 Kernel

# 权限设置
permissions:
  contents: write
  actions: write

# 触发条件：手动触发 (workflow_dispatch)
on:
  workflow_dispatch:
    inputs:
      # 是否创建发布，对于单纯的构建任务可以忽略
      make_release:
        description: 'Do you want to create a release?'
        required: true
        type: boolean
        default: false
      # 选择 KernelSU Next 的分支
      ksun_branch:
        description: "Choose KernelSU Next Branch"
        required: true
        type: choice
        options:
          - stable
          - next
        default: next
      # 为 android13-5.15 内核选择 SusFS 分支
      android13-5_15_susfs_branch:
        description: "Choose SusFS Branch for android13-5.15"
        type: string
        default: "gki-android13-5.15"

# 定义构建作业
jobs:
  # 构建 OnePlus 11 的作业
  build-op11:
    # 作业名称，清晰地展示正在构建的设备和内核版本
    name: build-op11 (kalama, android13, 5.15, ${{ inputs.ksun_branch }})
    # 在最新的 Ubuntu 虚拟机上运行
    runs-on: ubuntu-latest
    steps:
      # 步骤1: 选择合适的 SusFS 分支
      - name: Select Appropriate SusFS Branch
        id: get-susfs-branch
        run: |
          # 直接使用输入参数作为 SusFS 分支
          SUSFS_BRANCH="${{ inputs.android13-5_15_susfs_branch }}"
          
          # 如果输入为空，则使用默认值
          if [[ -z "$SUSFS_BRANCH" ]]; then
            SUSFS_BRANCH="gki-android13-5.15"
          fi
          
          # 将选择的分支名设置为后续步骤可用的输出变量
          echo "susfs_branch=$SUSFS_BRANCH" >> $GITHUB_OUTPUT

      # 步骤2: 拉取代码
      - name: Checkout Code
        uses: actions/checkout@v3

      # 步骤3: 构建内核
      # 使用本地的复合 Action (/.github/actions)
      - name: Build Kernel
        uses: ./.github/actions/
        with:
          # 以下为 OnePlus 11 的特定构建参数
          model: OP11
          soc: kalama
          branch: oneplus/sm8550
          manifest: oneplus_11_v.xml
          android_version: android13
          kernel_version: "5.15"
          # 以下为手动触发时输入的参数
          ksun_branch: ${{ inputs.ksun_branch }}
          susfs_branch: ${{ steps.get-susfs-branch.outputs.susfs_branch }}
